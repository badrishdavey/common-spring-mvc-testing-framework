This repository contains spring based framework which can be commonly used among different spring mvc applications (especially for JSP View based apps).

Features:
- No need to learn new APIs or guide. Ready to use framework.
- Custom View Resolver has been included in framework which will be used to hack rendering of JSP pages (which require server deployment).
- This framework is a Plug/Play framework which requires minimal configuration.
- This framework must only be used for Integration testing. Include it as JAR in your project (Scope: TEST only).
- This framwork can be used for end to end integration testing. In turn, it can increase the code coverage unexpectedly. Thus, it will be ideal if you don't include end to end integration testing in your code coverage.
- Work is still in progress becuase rendering of JSP pages without Server deployment is not feasible. I will keep working on finding some alternative and update this framework.
 
How to use it:

MAVEN:

- Update your pom.xml with following snippet:

<dependency>
	<groupId>common.mvc.integration-test</groupId>
	<artifactId>common-mvc-integration-testing</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<scope>test</scope>
</dependency>

- Checkout this project and deploy the distribution in your internal repository. (with same version that you mentioned above)

- Enhance your Integration Test Suite using below sample as base:

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations="classpath:test-servlet.xml", loader=MockWebApplicationContextLoader.class)
@MockWebApplication(name="Any-controller", webapp="/webapp")
public class AnyControllerTest extends AbstractControllerTestSupport{

// Your test code here.

@Test
	public void viewTest() throws ServletException, IOException {
		MockHttpServletRequest request = new MockHttpServletRequest("GET", "ANY_URL");
		MockHttpServletResponse response = new MockHttpServletResponse();
		
		getServletInstance().service(request, response);
		String results = response.getContentAsString().trim();
		
// Your testing code here
	}

}


More updates will be coming soon...

Thanks to Tejus and Ted Young for head start on spring mvc integration testing. For other views (like freemarker, XML/Json Views) which doesn't need server deployment, refer to: https://github.com/SpringSource/spring-test-mvc framework.